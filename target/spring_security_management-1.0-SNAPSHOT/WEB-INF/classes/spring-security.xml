<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			    http://www.springframework.org/schema/beans/spring-beans.xsd
			    http://www.springframework.org/schema/context
			    http://www.springframework.org/schema/context/spring-context.xsd
			    http://www.springframework.org/schema/aop
			    http://www.springframework.org/schema/aop/spring-aop.xsd
			    http://www.springframework.org/schema/tx
			    http://www.springframework.org/schema/tx/spring-tx.xsd
			    http://www.springframework.org/schema/mvc
			    http://www.springframework.org/schema/mvc/spring-mvc.xsd
                http://www.springframework.org/schema/security
			    http://www.springframework.org/schema/security/spring-security.xsd">


    <!--释放静态资源-->
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>
    <security:http pattern="/failer.jsp" security="none"/>
    <!--配置spring-security-->
    <!--
    auo-config='true' 表示自动加载spring-security的配置文件
    use-expressions='true' 表示使用spring的el表达式来配置spring-security
     -->
    <security:http auto-config="true" use-expressions="true">

        <!--让认证页面可以匿名访问-->
        <security:intercept-url pattern="/login.jsp" access="permitAll()" ></security:intercept-url>
        <!--
        pattern="/**" 表示拦截所有资源
        access="hasAnyRole('ROLE_USER')" 表示只有ROLE_USER角色才能访问资源
        -->
        <security:intercept-url pattern="/**"
                                access="hasAnyRole('ROLE_USER')" ></security:intercept-url>
        <!--
        login-page 指定登录页
        login-processing-url 登录处理器地址
        default-target-url 登录成功之后默认跳转的url路径
        authentication-failure-url 登录失败后的跳转url路径
        -->
        <security:form-login
                login-page="/login.jsp"
                login-processing-url="/login"
                default-target-url="/index.jsp"
                authentication-failure-url="/failer.jsp"
        ></security:form-login>
        <!--配置退出登录的信息
            logout-url 退出登录的url
            logout-success-url 退出成功后调用的url
        -->
        <security:logout logout-url="/logout" logout-success-url="/login.jsp"></security:logout>
        <!--关闭CSRF-->
        <security:csrf disabled="true"></security:csrf>

        <security:remember-me data-source-ref="dataSource" ></security:remember-me>
    </security:http>

    <!--设置Spring Security认证用户信息的来源
    spring-security默认必须是加密的 加上{noop}表示不加密认证
    -->
    <security:authentication-manager>

        <security:authentication-provider user-service-ref="userServiceImpl">
            <security:password-encoder ref="bCryptPasswordEncoder"></security:password-encoder>
            <!--<security:user-service>-->
                <!--<security:user name="user" password="{noop}user"-->
                               <!--authorities="ROLE_USER" />-->
                <!--<security:user name="admin" password="{noop}admin"-->
                               <!--authorities="ROLE_ADMIN" />-->
            <!--</security:user-service>-->
        </security:authentication-provider>
    </security:authentication-manager>
    <!--开启权限控制的注解 注解写在那个容器对象中  注解配置也要写在那个容器配置中
    secured-annotations="enabled security内部的权限控制注解开关
    pre-post-annotations="enabled" spring指定的权限控制注解开关]
    jsr250-annotations="enabled" 开启java250注解支持
    -->
    <security:global-method-security jsr250-annotations="enabled" secured-annotations="enabled" pre-post-annotations="enabled"/>

    <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="bCryptPasswordEncoder"></bean>













</beans>